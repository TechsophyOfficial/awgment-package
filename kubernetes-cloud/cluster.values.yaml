accountapp:
  registration:
    email: "noreply-tsf@gmail.com"

keycloak:
  adminUser: admin
  adminPassword: Admin@^&%$
  client:
    secret: 0ef502e1-567a-48cf-ae56-7e1a5bdfe3c4  
  db:
    host: <POSTGRES_HOST>:5432
    user: <POSTGRES_USER>
    password: <POSTGRES_PASSWORD>
    name: keycloakdb
    vendor: postgres
  url: http://auth.<loadbalancerip>.nip.io
  
mongo:
   url: mongodb+srv://<username>:<password>@<mongo.cluster.com>:27017/?retryWrites=true
postgres:
  camunda:
    dburl: jdbc:postgresql://<POSTGRES_HOST>:5432/camundadb
    user: <POSTGRES_USER>
    password: <POSTGRES_PASSWORD>
    database: camundadb
         
cloudconfig:
   url: https://github.com/TechsophyOfficial/tp-cloud-config.git
   user: test
   password: test

aws: 
  region: ap-south-1
  access_key: <your_aws_key>
  access_secret: <your_aws_secret>
  bucket_name: techsophy-platform

ses:
  aws_region: ap-south-1
  access_key: <your_aws_key>
  access_secret: <your_aws_secret>

smtp:
  host: <your_smtp_host>
  password: <your_smtp_passwor>
  port: "587"
  user: noreply.tsf@gmail.com

sns:
  access_key: <your_sns_key>
  region: ap-south-1
  secret_key: <your_sns_secret>
  topic_arn: <your_arn_topic>


digital_ocean:
  access_key: <your_do_key>
  region: sgp1
  bucket_name: augmnt
  endpoint:  https://sgp1.digitaloceanspaces.com
  secret_key: <your_do_secret>

  
firebase:
  project_id: <your_firebase_projectid>
  private_key_id: <your_firebase_projectid>
  private_key: |
    -----BEGIN PRIVATE KEY-----
    z1EuHpjE6g==
    -----END PRIVATE KEY-----
  client_email: <your_do_secret>
  client_id: <your_client_id>
  token_url: https://oauth2.googleapis.com/token
  enabled: "false"
  app: "false"



twilio:
  msid: <your_msid>
  token: <your_token>
  account_id: <your_account_id>

paytm:
  url:  https://securegw-edc.paytm.in
  merchant_id: <your merchant id>
  merchant_key: <your merchant key>
  
razorpay:
  url: https://api.razorpay.com/v1
  key_id: <your key id>
  key_secret: <your key secret>

ingress:
   clusterissuer:
     issuer: selfsigned-issuer
    #  dev: letsencrypt-dev
    #  uat: letsencrypt-staging
    #  prod: letsencrypt-prod  

ingress:
   clusterissuer:
     issuer: selfsigned-issuer
    #  dev: letsencrypt-dev
    #  uat: letsencrypt-staging
    #  prod: letsencrypt-prod  
   hosts:
     keycloak: auth.<loadbalancerip>.nip.io
     gateway: api.<loadbalancerip>.nip.io
     tsffrontend: awgment.<loadbalancerip>.nip.io
     camunda: camunda.<loadbalancerip>.nip.io
   urls:
     keycloak: http://auth.<loadbalancerip>.nip.io/
     gateway: http://api.<loadbalancerip>.nip.io
     tsffrontend: http://awgment.<loadbalancerip>.nip.io 
     camunda:  http://awgment.<loadbalancerip>.nip.io/camunda
   secretname:
     keycloak: local-augmnt
     gateway: local-augmnt
     tsffrontend: local-augmnt
     camunda: local-augmnt
